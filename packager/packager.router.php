<?php
//Define interface class for router
use \Psr\Http\Message\ServerRequestInterface as Request;        //PSR7 ServerRequestInterface   >> Each router file must contains this
use \Psr\Http\Message\ResponseInterface as Response;            //PSR7 ResponseInterface        >> Each router file must contains this

//Define your modules class
use \modules\packager\Packager as Packager;                     //Your main modules class

//Define additional class for any purpose
use \classes\middleware\ApiKey as ApiKey;                       //ApiKey Middleware             >> To authorize request by using ApiKey generated by reSlim
use \classes\middleware\ValidateParamURL as ValidateParamURL;   //ValidateParamURL              >> To validate the query parameter url request


    // Get module information
    $app->get('/packager/get/info/', function (Request $request, Response $response) {
        $pc = new Packager($this->db);
        $body = $response->getBody();
        $response = $this->cache->withEtag($response, $this->etag2hour.'-'.trim($_SERVER['REQUEST_URI'],'/'));
        $body->write($pc->viewInfo());
        return classes\Cors::modify($response,$body,200);
    })->add(new ApiKey);

    
    // Show All Installed Packages
    $app->get('/packager/show/all/{username}/{token}', function (Request $request, Response $response) {
        $pc = new Packager($this->db);
        $pc->username = $request->getAttribute('username');
        $pc->token = $request->getAttribute('token');
        $lang = (empty($_GET['lang'])?'en':$_GET['lang']);
        $body = $response->getBody();
        $body->write($pc->showAll($lang));
        return classes\Cors::modify($response,$body,200);
    })->add(new ValidateParamURL('lang','0-2'));


    // Install Packages from Zip (Notice: This is not safe but faster)
    $app->get('/packager/install/zip/{username}/{token}/', function (Request $request, Response $response) {
        $pc = new Packager($this->db);
        $pc->username = $request->getAttribute('username');
        $pc->token = $request->getAttribute('token');
        $lang = (empty($_GET['lang'])?'en':$_GET['lang']);
        $body = $response->getBody();
        $body->write($pc->installFromZip($_GET['source'],'',$lang));
        return classes\Cors::modify($response,$body,200);
    })->add(new ValidateParamURL('lang','0-2'))
        ->add(new ValidateParamURL('source','1-250','url'));

    // Install Packages from Zip safely
    $app->get('/packager/install/zip/safely/{username}/{token}/', function (Request $request, Response $response) {
        $pc = new Packager($this->db);
        $pc->username = $request->getAttribute('username');
        $pc->token = $request->getAttribute('token');
        $lang = (empty($_GET['lang'])?'en':$_GET['lang']);
        $body = $response->getBody();
        $body->write($pc->installFromZipSafely($_GET['source'],$_GET['namespace'],$lang));
        return classes\Cors::modify($response,$body,200);
    })->add(new ValidateParamURL('lang','0-2'))
        ->add(new ValidateParamURL('namespace','1-50'))
        ->add(new ValidateParamURL('source','1-250','url'));

    // Uninstall Packages
    $app->get('/packager/uninstall/{username}/{token}/', function (Request $request, Response $response) {
        $pc = new Packager($this->db);
        $pc->username = $request->getAttribute('username');
        $pc->token = $request->getAttribute('token');
        $lang = (empty($_GET['lang'])?'en':$_GET['lang']);
        $body = $response->getBody();
        $body->write($pc->uninstallPackage($_GET['namespace'],$lang));
        return classes\Cors::modify($response,$body,200);
    })->add(new ValidateParamURL('lang','0-2'))
        ->add(new ValidateParamURL('namespace','1-50'));